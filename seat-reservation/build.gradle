plugins {
  id 'java'
  id 'groovy'
  id 'org.springframework.boot' version '3.2.0'
  id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.mrozowski'
version = '0.0.1-SNAPSHOT'

java {
  sourceCompatibility = '17'
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-quartz'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.liquibase:liquibase-core'
  compileOnly 'org.projectlombok:lombok'
  //developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
  runtimeOnly 'org.postgresql:postgresql'
  annotationProcessor 'org.projectlombok:lombok'
  implementation 'io.cucumber:cucumber-spring:7.14.1'
  testImplementation 'io.cucumber:cucumber-java:7.14.1'
  // testImplementation 'io.cucumber:cucumber-junit:7.14.1'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.boot:spring-boot-testcontainers'
  testImplementation 'org.spockframework:spock-core:2.4-M1-groovy-4.0'
  testImplementation 'org.apache.groovy:groovy-json:4.0.15'
  testImplementation 'org.testcontainers:spock:1.19.3'
  testImplementation 'org.testcontainers:postgresql'
}

configurations {
  cucumberRuntime {
    extendsFrom testImplementation
  }
}

tasks.register('e2e-test') {
  dependsOn assemble, testClasses
  doLast {
    javaexec {
      main = "io.cucumber.core.cli.Main"
      classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output + configurations.runtimeClasspath
      args = [
          '--plugin', 'pretty',
          '--glue', 'com.mrozowski.seatreservation',
          'src/test/resources']
    }
  }
}

tasks.named('test') {
  useJUnitPlatform()
}
